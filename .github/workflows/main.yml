name: Main Foodgram workflow

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    # Copy compose file on production server
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        source: "./infra/"
        target: "AutoDocsOnline"
        rm: true

    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd AutoDocsOnline/infra/

          # Pull images
          sudo docker compose -f docker-compose.production.yml pull

          # Restart docker compose
          sudo docker compose -f docker-compose.production.yml down
          sudo docker compose -f docker-compose.production.yml up -d

          # Make migrations
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate

          # load base data
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py createsuperuser --noinput
          sudo docker compose -f docker-compose.production.yml exec backend python manage.py load -i -t

          # clear
          sudo docker system prune --all --force

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          New version of ${{ github.event.repository.name }} was pushed successfully on production server.
